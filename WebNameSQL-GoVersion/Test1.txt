OneColumn2Web{Test3.txt ~ Text}
Web2OneColumn{Text | * ~ Result-Text.txt}
CSV2Web{OneColumnNumber.txt ~ One}
Web2CSV{One | * ~ Result-OneColumnNumber.txt}
CSV2Web{10000.csv ~ Table}
Process{Block_A}
Process{Block_B}
Process{Block_C}
Process{Block_D}

# Block_A
CopyTable{Table | ~ Table2}
Web2CSV{Table2 | Date,Ledger,Account, Exchange Rate,Original Amount,Base Amount ~ Result-CopyTable.csv}
SelectColumn{Table2 | Exchange Rate,Original Amount,Base Amount, Date, PartNo,Project,Contact,Unit Code,Quantity,Unit Price,D/C,Currency ~ Table3}
Web2CSV{Table3 | * ~ Result-SelectColumn.csv}
RemoveColumn{Table | Date,PartNo,Quantity, D/C ~ Table4}
Web2CSV{Table4 | * ~ Result-RemoveColumn.csv}
AmendColumnName{Table | Date = Voucher Date, Account = Account Code, Base Amount = Amount ~ Table5}
Web2CSV{Table5 | * ~ Result-AmendColumnName.csv}
Web2JSON{Table5 | * ~ Result-AmendColumnName.json}
Web2HTML{Table5 | * ~ Result-AmendColumnName.html}
Web2XML{Table5 | * ~ Result-AmendColumnName.xml}

# Block_B
Number2Text{Table | Original Amount,Base Amount,Unit Code, Quantity ~ Table6}
Web2CSV{Table6 | * ~ Result-Number2Text.csv}
ReverseNumber{Table | Original Amount,Base Amount,Unit Code, Quantity ~ Table7}
Web2CSV{Table7 | * ~ Result-ReverseNumber.csv}
ComputeColumn{Table|"Prefix-", Contact, "-ABC-", Currency, "-Sufix-", Exchange Rate => CombineText(CompositName) ~ Table8}
Web2CSV{Table8 | * ~ Result-ComputeColumn-CombineText.csv}
ComputeColumn{Table| Quantity, Unit Price, Exchange Rate => Multiply(MultiplyAmount2.2)}
ComputeColumn{Quantity, Unit Price, Exchange Rate => Add(AddAmount2.2)}
ComputeColumn{Quantity, Unit Price, Exchange Rate => Subtract(SubtractAmount2.2)}
ComputeColumn{Quantity, Unit Price, Exchange Rate => Divide(DivideAmount2.2) ~ Table9}
Web2CSV{Table9 | * ~ Result-ComputeColumn.csv}

# Block_C
Table2Cell{Table | Base Amount => Sum(sumValue1.2)}
Table2Cell{Table | Original Amount, Base Amount => Sum(sumValue1.1)}
Table2Cell{Base Amount => Max(maxValue)}
Table2Cell{Base Amount => Min(minValue)}
Table2Cell{Original Amount, Base Amount => Min(minValue2.1)}
Table2Cell{Base Amount => Count(countValue)}
Table2Cell{Base Amount => Average(AverageValue.4)}
Table2Cell{Base Amount[First] => CellAddress(cellA1.2)}
Table2Cell{Base Amount[2] => CellAddress(cellA2.2)}
Table2Cell{Base Amount[Last] => CellAddress(cellA3.2)}
Table2Cell{Project[First] => CellAddress(cellA4)}
Table2Cell{Project[12] => CellAddress(cellA5)}
Table2Cell{Project[Last] => CellAddress(cellA6)}
Table2Cell{Contact[10] => CellAddress(cellA7)}
Table2Cell{Contact[11] => CellAddress(cellA8)}

# Block_D
ComputeCell{cellA1, cellA2 => Add(cellA9.2)}
ComputeCell{"4", "-", cellA4, "-", "apple" => CombineText(cellA6)}
ComputeCell{"0", "2.5" => Subtract(cellA3.2)}
ComputeCell{"2", cellA3 => Subtract(cellA3.2)}
ComputeCell{"2", cellA3 => Subtract(cellA3.2)}
ComputeCell{"2", cellA3 => Add(cellA3.3)}
ComputeCell{"4", "3" => Divide(cellA4.4)}
ComputeCell{"4", cellA4 => Divide(cellA4.4)}
ComputeCell{cellA4 => Add(cellA4.0)}
ComputeCell{"4", "0" => Divide(cellA4.4)}
ComputeCell{"4", "2" => Multiply(cellA5.5)}
ComputeCell{"4", cellA5 => Multiply(cellA5.5)}
ComputeCell{cellA5, "4" => Multiply(cellA5.5)}
ComputeCell{cellA5, "0" => Multiply(cellA5.5)}



